name: CI/CD for Angular App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: npm run build

      - name: Archive production artifacts
        run: tar -czf build.tar.gz -C dist/frontend .

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add EC2 instance to known_hosts
        run: |
          ssh-keyscan -H ec2-3-137-147-107.us-east-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Copy artifact to EC2
        run: |
          scp build.tar.gz ec2-user@ec2-3-137-147-107.us-east-2.compute.amazonaws.com:/home/ec2-user/

      - name: Set up Nginx and deployment directory on EC2
        run: |
          ssh ec2-user@ec2-3-137-147-107.us-east-2.compute.amazonaws.com << 'EOF'
            # Install Nginx if not already installed
            if ! command -v nginx > /dev/null; then
              sudo amazon-linux-extras install nginx1 -y
              sudo systemctl start nginx
              sudo systemctl enable nginx
            fi

            # Create the deployment directory if it does not exist
            sudo mkdir -p /var/www/html
            sudo chown ec2-user:ec2-user /var/www/html
          EOF

      - name: Deploy on EC2
        run: |
          ssh ec2-user@ec2-3-137-147-107.us-east-2.compute.amazonaws.com << 'EOF'
            # Navigate to the target deployment directory
            cd /var/www/html

            # Remove existing content
            rm -rf *

            # Extract the new build artifact from the home directory to the current directory
            tar -xzf /home/ec2-user/build.tar.gz -C .

            # Clean up by removing the tar file from the home directory
            rm /home/ec2-user/build.tar.gz
          EOF


